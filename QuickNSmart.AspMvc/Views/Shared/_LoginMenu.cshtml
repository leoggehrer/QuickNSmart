@*@QnSBaseCode*@
@using Microsoft.AspNetCore.Mvc.Razor
@using QuickNSmart.AspMvc.Modules.Session
@*Begin:Header*@
@{
#if DEBUG
	string currentView = ((RazorView)ViewContext.View).Path;
	string beginLabel = $"<!--View Begin: '{currentView}'-->";
	@Html.Raw(beginLabel)
#endif
	SessionWrapper sessionWrapper = new SessionWrapper(Context.Session);
	Func<string, string> translate = sessionWrapper.Translate;
}
@*End:Header*@

@{
    string welcome = "";
    string mnoLogon = "Logon";
    string mnuLogout = "Logout";
    string mnuIdentityMngr = "Identity-Manage";
    string mnuRoleMngr = "Role-Manage";
    string mnuPwdChange = "Change password";
    string mnuPwdReset = "Reset password";
    string mnuTranslation = "Translation Settings";
    string mnuUser = string.Empty;

    if (sessionWrapper.LoginSession != null)
    {
        mnuUser = sessionWrapper.LoginSession.Name;
        if (sessionWrapper.LoginSession.IsRemoteAuth)
        {
			mnuUser = $"{mnuUser} [rm]";
        }
    }

    welcome = translate(welcome);
    mnoLogon = translate(mnoLogon);
    mnuLogout = translate(mnuLogout);
    mnuIdentityMngr = translate(mnuIdentityMngr);
    mnuPwdChange = translate(mnuPwdChange);
    mnuPwdReset = translate(mnuPwdReset);
    mnuTranslation = translate(mnuTranslation);
}

@if (sessionWrapper.LoginSession != null && sessionWrapper.LoginSession.LogoutTime.HasValue == false)
{
	using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
	{
		@Html.AntiForgeryToken()

		<ul class="nav navbar-nav navbar-right">
			<li class="dropdown">
				<a href="#" class="dropdown-toggle" data-toggle="dropdown">@string.Format("{0} {1}", welcome, mnuUser)</a>
				<ul class="dropdown-menu">
					@if (sessionWrapper.HasRole("SysAdmin") == true)
					{
						<li class="dropdown-item">@Html.ActionLink(mnuIdentityMngr, "Index", "Identity", routeValues: null, htmlAttributes: null)</li>
						<li class="dropdown-item">@Html.ActionLink(mnuRoleMngr, "Index", "Role", routeValues: null, htmlAttributes: null)</li>
						@*<li class="dropdown-item">@Html.ActionLink(mnuTranslation, "Index", "Translation", routeValues: null, htmlAttributes: null)</li>*@
						<li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
						<li class="dropdown-item">@Html.ActionLink(mnuPwdReset, "ResetPassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
						<li class="divider"></li>
					}
					else if (sessionWrapper.HasRole("AppAdmin") == true)
					{
						<li class="dropdown-item">@Html.ActionLink(mnuIdentityMngr, "Index", "Identity", routeValues: null, htmlAttributes: null)</li>
						<li class="dropdown-item">@Html.ActionLink(mnuRoleMngr, "Index", "Role", routeValues: null, htmlAttributes: null)</li>
						@*<li class="dropdown-item">@Html.ActionLink(mnuTranslation, "Index", "Translation", routeValues: null, htmlAttributes: null)</li>*@
						<li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
						<li class="dropdown-item">@Html.ActionLink(mnuPwdReset, "ResetPassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
						<li class="divider"></li>
					}
					else
					{
						<li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
					}
					<li class="dropdown-item"><a href="javascript:document.getElementById('logoutForm').submit()" >@mnuLogout<i style="margin-left: 1em;" class="fas fa-sign-out-alt"></i></a></li>
				</ul>
			</li>
		</ul>
	}
}
else
{
	<ul class="nav navbar-nav navbar-right">
		<li>@Html.ActionLink(mnoLogon, "Logon", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
	</ul>
}

@*Begin:Footer*@
@{
#if DEBUG
	string endLabel = $"<!--View Ende: '{currentView}'-->";

	@Html.Raw(endLabel)
#endif
}
@*End:Footer*@
