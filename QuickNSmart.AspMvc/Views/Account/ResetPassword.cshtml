@*@QnSBaseCode*@
@using Microsoft.AspNetCore.Mvc.Razor
@using QuickNSmart.AspMvc.Modules.Session
@using QuickNSmart.AspMvc.Models.Modules.Account
@model ResetPasswordViewModel
@*Begin:Header*@
@{
#if DEBUG
    string currentView = ((RazorView)ViewContext.View).Path;
    string beginLabel = $"<!--View Begin: '{currentView}'-->";
    @Html.Raw(beginLabel)
#endif
    SessionWrapper sessionWrapper = new SessionWrapper(Context.Session);
    Func<string, string> translate = sessionWrapper.Translate;
}
@*End:Header*@

@{
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    string action = ViewContext.RouteData.Values["action"].ToString();
    Func<string, string> translateFor = pn => translate($"{controller}.{pn}");
    string title = translateFor(action);
    string logedInText = $"{translate("Reset Password Form")}";
}

<h1>@title</h1>

<div class="d-flex bg-transparent">
    <div class="p-sm-2 mr-auto">
        <h4>@translate(controller)</h4>
    </div>
</div>
<hr />

@if (Model.HasError)
{
    <span class="field-validation-error" data-valmsg-for="Error" data-valmsg-replace="true">@translate(Model.ActionError)</span>
}

<form asp-action="ResetPassword" asp-controller="Account" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <h5>@logedInText</h5>
            </div>
            <div class="form-group">
                <label class="control-label">@translateFor(nameof(Model.Email))</label>
                <input asp-for="Email" class="form-control" type="email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">@translateFor(nameof(Model.NewPassword))</label>
                <input asp-for="NewPassword" class="form-control" type="password" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">@translateFor(nameof(Model.ConfirmPassword))</label>
                <input asp-for="ConfirmPassword" class="form-control" type="password" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
        </div>
    </div>
    @await Html.PartialAsync("_SubmitBack", new SubmitBackCmd() { SubmitText = "Reset" })
</form>

@*Begin:Footer*@
@{
#if DEBUG
    string endLabel = $"<!--View Ende: '{currentView}'-->";

    @Html.Raw(endLabel)
#endif
}
@*End:Footer*@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
