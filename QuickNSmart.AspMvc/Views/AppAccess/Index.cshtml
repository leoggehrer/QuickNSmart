@*@QnSBaseCode*@
@using Microsoft.AspNetCore.Mvc.Razor
@using QuickNSmart.AspMvc.Modules.Session
@model IEnumerable<QuickNSmart.AspMvc.Models.Business.Account.AppAccess>
@*Begin:Header*@
@{
#if DEBUG
    string currentView = ((RazorView)ViewContext.View).Path;
    string beginLabel = $"<!--View Begin: '{currentView}'-->";
    @Html.Raw(beginLabel)
#endif
}

@{
    SessionWrapper sessionWrapper = new SessionWrapper(Context.Session);
    Func<string, string> translate = sessionWrapper.Translate;
}
@*End:Header*@
@{
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    Func<string, string> translateFor = pn => translate($"{controller}.{pn}");
    string title = translate(controller);

    ViewData["Title"] = title;
}

<h1>@title</h1>

@if (sessionWrapper.IsAuthenticated && sessionWrapper.HasRole("SysAdmin", "AppAdmin"))
{
    <div class="d-flex bg-transparent">
        <div class="mr-auto p-sm-2">
            <a asp-action="Create" class="btn btn-outline-secondary">@translateFor("Create New")</a>
        </div>
        <div class="p-sm-2">
            <a asp-action="Export" class="btn btn-outline-secondary">@translateFor("Export")</a>
        </div>
        <div class="p-sm-2">
            <a asp-action="Import" class="btn btn-outline-primary">@translateFor("Import")</a>
        </div>
    </div>
}
<p></p>
<table class="table">
    <thead>
        <tr>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.FirstItem.Name))
            </th>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.FirstItem.Email))
            </th>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.FirstItem.EnableJwtAuth))
            </th>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.SecondItems))
            </th>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.FirstItem.AccessFailedCount))
            </th>
            <th>
                @translateFor(Html.DisplayNameFor(model => model.FirstItem.State))
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstItem.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstItem.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstItem.EnableJwtAuth)
                </td>
                <td>
                    <ul>
                        @foreach (var role in item.SecondItems)
                        {
                            <li>@role.Designation</li>
                        }
                    </ul>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstItem.AccessFailedCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstItem.State)
                </td>
                <td>
                    @Html.ActionLink(translateFor("Edit"), "Edit", new { id = item.Id }) |
                    @Html.ActionLink(translateFor("Details"), "Details", new { id = item.Id }) |
                    @Html.ActionLink(translateFor("Delete"), "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

@*Begin:Footer*@
@{
#if DEBUG
    string endLabel = $"<!--View Ende: '{currentView}'-->";

    @Html.Raw(endLabel)
#endif
}
@*End:Footer*@
